[Unit]
Description=Immich server component ({{ immich_server_identifier }})
{% for service in immich_server_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in immich_server_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
Environment="HOME={{ devture_systemd_docker_base_systemd_unit_home_path }}"
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ immich_server_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ immich_server_identifier }} 2>/dev/null || true'

{#
    The machine-learning container is linked as `immich-machine-learning`,
    because that's the default configuration (which is only changeable from the UI).
    Ref: https://immich.app/docs/administration/system-settings#url
#}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
                --rm \
                --name={{ immich_server_identifier }} \
                --log-driver=none \
                --user={{ immich_server_container_uid }}:{{ immich_server_container_gid }} \
                {% if immich_server_container_cap_drop_all_enabled %}
                --cap-drop=ALL \
                {% endif %}
                {% if immich_server_container_cap_add_enabled %}
                {% for cap in immich_server_container_cap_add_capabilities %}
                --cap-add={{ cap }} \
                {% endfor %}
                {% endif %}
                {% if immich_server_container_read_only_enabled %}
                --read-only \
                {% endif %}
                --network={{ immich_server_container_network }} \
                {% if immich_server_container_http_host_bind_port %}
                -p {{ immich_server_container_http_host_bind_port }}:{{ immich_server_http_port }} \
                {% endif %}
                --link {{ immich_machine_learning_identifier }}:immich-machine-learning \
                --env-file={{ immich_server_base_path }}/env \
                --label-file={{ immich_server_base_path }}/labels \
                --health-interval={{ immich_server_container_health_interval }} \
                --mount type=bind,src={{ immich_server_data_path }},dst=/data \
                {% for volume in immich_server_container_additional_volumes %}
                --mount type={{ volume.type | default('bind' if '/' in volume.src else 'volume') }},src={{ volume.src }},dst={{ volume.dst }}{{ (',' + volume.options) if volume.options else '' }} \
                {% endfor %}
                {% for security_opt in immich_server_container_security_opt %}
                --security-opt={{ security_opt }} \
                {% endfor %}
                {% for device in immich_server_container_devices %}
                --device={{ device.src }}:{{ device.dst }}{{ (':' + device.options) if device.options else '' }} \
                {% endfor %}
                {% for device_cgroup_rule in immich_server_container_device_cgroup_rules %}
                --device-cgroup-rule="{{ device_cgroup_rule }}" \
                {% endfor %}
                {% for gpu in immich_server_container_gpus %}
                --gpus={{ gpu }} \
                {% endfor %}
                {% if immich_server_container_extra_arguments | length > 0 %}
                {{ immich_server_container_extra_arguments | join(' ') }} \
                {% endif %}
                {{ immich_server_container_image }}

{% for network in immich_server_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ immich_server_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ immich_server_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ immich_server_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ immich_server_identifier }} 2>/dev/null || true'
Restart=always
RestartSec=30
SyslogIdentifier={{ immich_server_identifier }}

[Install]
WantedBy=multi-user.target
