# SPDX-FileCopyrightText: 2023 MASH project contributors
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
# SPDX-FileCopyrightText: 2025 IUCCA
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---

- name: Ensure Immich paths exist
  when: item.when | bool
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "0750"
    owner: "{{ immich_uid }}"
    group: "{{ immich_gid }}"
  with_items:
    - path: "{{ immich_base_path }}"
      when: true
    - path: "{{ immich_server_base_path }}"
      when: "{{ immich_server_enabled }}"
    - path: "{{ immich_server_data_path }}"
      when: "{{ immich_server_enabled }}"
    - path: "{{ immich_machine_learning_base_path }}"
      when: "{{ immich_machine_learning_enabled }}"
    - path: "{{ immich_machine_learning_cache_path }}"
      when: "{{ immich_machine_learning_enabled }}"
    - path: "{{ immich_machine_learning_dot_cache_path }}"
      when: "{{ immich_machine_learning_enabled }}"
    - path: "{{ immich_machine_learning_tmp_path }}"
      when: "{{ immich_machine_learning_enabled and not immich_machine_learning_container_tmp_tmpfs_enabled }}"

- name: Ensure Immich tmp path removed if tmp-on-tmpfs enabled
  when: immich_machine_learning_enabled and immich_machine_learning_container_tmp_tmpfs_enabled
  ansible.builtin.file:
    path: "{{ immich_machine_learning_tmp_path }}"
    state: absent

# We intentionally don't clean up:
# - `immich_server_base_path` if `not immich_server_enabled`
# - `immich_machine_learning_base_path` if `not immich_machine_learning_enabled`
# because we rely on uninstall.yml tasks to do it more cleanly.

- name: Ensure Immich support files installed
  when: item.when | bool
  ansible.builtin.template:
    src: "{{ role_path }}/{{ item.src }}"
    dest: "{{ item.dst }}"
    mode: "0640"
    owner: "{{ immich_uid }}"
    group: "{{ immich_gid }}"
  with_items:
    - src: templates/server/env.j2
      dst: "{{ immich_server_base_path }}/env"
      when: "{{ immich_server_enabled }}"
    - src: templates/server/labels.j2
      dst: "{{ immich_server_base_path }}/labels"
      when: "{{ immich_server_enabled }}"
    - src: templates/machine-learning/env.j2
      dst: "{{ immich_machine_learning_base_path }}/env"
      when: "{{ immich_machine_learning_enabled }}"

- name: Ensure Immich container images are pulled via community.docker.docker_image
  when: devture_systemd_docker_base_container_image_pull_method == 'ansible-module' and item.when
  community.docker.docker_image:
    name: "{{ item.image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ item.force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else item.force_pull }}"
  register: image_pull_result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: image_pull_result is not failed
  with_items:
    - image: "{{ immich_server_container_image }}"
      force_pull: "{{ immich_server_container_image_force_pull }}"
      when: "{{ immich_server_enabled }}"
    - image: "{{ immich_machine_learning_container_image }}"
      force_pull: "{{ immich_machine_learning_container_image_force_pull }}"
      when: "{{ immich_machine_learning_enabled }}"

- name: Ensure Immich container images are pulled via command
  when: devture_systemd_docker_base_container_image_pull_method == 'command' and item.when
  ansible.builtin.command:
    cmd: "{{ devture_systemd_docker_base_host_command_docker }} pull {{ item.image }}"
  register: image_pull_result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: image_pull_result is not failed
  changed_when: "'Downloaded newer image' in image_pull_result.stdout"
  with_items:
    - image: "{{ immich_server_container_image }}"
      when: "{{ immich_server_enabled }}"
    - image: "{{ immich_machine_learning_container_image }}"
      when: "{{ immich_machine_learning_enabled }}"

- name: Ensure Immich container networks are created via community.docker.docker_network
  when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
  community.general.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ item }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"
  with_items: "{{ immich_container_networks }}"

- name: Ensure Immich container networks are created via ansible.builtin.command
  when: devture_systemd_docker_base_container_network_creation_method == 'command'
  ansible.builtin.command:
    cmd: >-
      {{ devture_systemd_docker_base_host_command_docker }} network create
      {% if devture_systemd_docker_base_ipv6_enabled %}--ipv6{% endif %}
      {{ devture_systemd_docker_base_container_networks_driver_options_string }}
      {{ item }}
  register: network_creation_result
  changed_when: network_creation_result.rc == 0
  failed_when: network_creation_result.rc != 0 and 'already exists' not in network_creation_result.stderr
  with_items: "{{ immich_container_networks }}"

- name: Ensure Immich systemd services are present
  when: item.when
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  with_items:
    - src: "{{ role_path }}/templates/server/immich-server.service.j2"
      dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ immich_server_identifier }}.service"
      when: "{{ immich_server_enabled }}"
    - src: "{{ role_path }}/templates/machine-learning/immich-machine-learning.service.j2"
      dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ immich_machine_learning_identifier }}.service"
      when: "{{ immich_machine_learning_enabled }}"
